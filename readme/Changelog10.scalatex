@import Main._
@import org.scalafmt.rewrite._
@import org.scalafmt.readme.Readme._
@import org.scalafmt.config.ScalafmtConfig

@ignore
  @ul
    @li
      Please document your contribution here.
@sect{1.5.1}
  @ul
    @li
      @pr(1153) by @user{lorandszakacs}. Fix SortModifiers handling of implicit parameters.
    @li
      @pr(1157) by @user{olafurpg}. Disable
      @code{rewrite.redundantBraces.generalExpressions = false} by default until @issue(1143) is fixed.
@sect{1.5.0}
  @ul
    @li
      @pr(1101) by @user{olafurpg}. Add @code{optIn.blankLineBeforeDocstring} setting.
    @li
      @pr(1103) by @user{dwijnand}. Support trailing commas in sbt files.
    @li
      @pr(1107) by @user{lloydmeta}. Add support for formatting Ammonite script files with extension @code{.sc}.
    @li
      @pr(1122) by @user{japgolly}.
      Update @code{RedundantBraces} to remove redundant braces from
      all expressions. If you'd like to restrict @code{RedundantBraces} behaviour
      to just method bodies and/or string interpolation as it was before this
      change, you can do so via new setting:
      @code{rewrite.redundantBraces.generalExpressions = false}
    @li
      @pr(1132) by @user{iantabolt}.
      Fix an issue where long "with chains" would exceed @code{maxColumn}.
      @hl.scala
        // maxColumn |
        // before
        Foo with Bar with Baz
        // after
        Foo
          with Bar
          with Baz
    @li
      @pr(1134) by @user{iantabolt}.
      Add @code{Newlines.alwaysBeforeMultilineDef=true}.
      If true, add a newline before the body of a multiline def without
      curly braces. For example,
      @hl.scala
        // before
        def foo(bar: Bar): Foo = bar
            .flatMap(f)
            .map(g)

        // newlines.alwaysBeforeMultilineDef = false
        def foo(bar: Bar): Foo = bar
          .flatMap(f)
          .map(g)

        // newlines.alwaysBeforeMultilineDef = true (default, unchanged from 1.4)
        def foo(bar: Bar): Foo =
          bar
            .flatMap(f)
            .map(g)
    @li
      @pr(1136) by @user{vovapolu}.
      Makes sbt-scalafmt incremental so only files that have been changed since last
      format are re-formatted.
    @li
      @pr(1143) by @user{mads-hartmann}.
      Add @sect.ref{verticalMultiline.arityThreshold} setting.
    @li
      @pr(1140) by @user{lorandszakacs}.
      Add @sect.ref{SortModifiers} rewrite rule.
    @li
      @pr(1144) by @user{mads-hartmann}.
      Style the website with colors from the Scalameta logo.

  @p
    Big thanks to all contributors!

@sect{1.4.0}
  @p
    See @lnk("merged PRs", "https://github.com/scalameta/scalafmt/milestone/19?closed=1").
  @ul
    @li
      @pr(1085) New @sect.ref{sbt-scalafmt} plugin for sbt 1.0.
      By @user{vovapolu}, thanks to ENSIME sponsorship fund.
    @li
      @pr(1093) Empty input with `--diff` and `--stdin` is okay, by
      @user{yln}.
    @li
      @pr(1090) Introduce "default", "akka" and "akka-http" as
      valid values for @code{indentOperator} config,
      by @user{daddykotex}.
    @li
      @pr(1087) Fix file not found errors when running from a subdirectory w/
      @code{project.git = true}, by @user{lloydmeta}.
    @li
      @pr(1079) Add @code{spaces.inByNameTypes=false} option to format
      @code{def foo(a: => A)} as @code{def foo(a: =>A)}.
      By @user{vovapolu}, thanks to ENSIME sponsorship fund.
    @li
      @pr(1076) Format .sbt files in latest IntelliJ Scala 2017.3 release.
      By @user{olafurpg}.
    @li
@sect{1.3.0}
  @ul
    @li
      @pr(1053) Respect @code{encoding} option when writing files, by @user{alexdupre}
    @li
      @pr(1048) Using AsciiSortImports and ExpandImportSelectors together will
      now fail fast instead of producing broken code, by @user{Lasering}
    @li
      @pr(1037) New @code{optIn.breaksInsideChains = true} option, by @user{olafurpg}
    @li
      @pr(1025) Return non-zero exit code in cli if no files match filter, by @user{yln}
@sect{1.2.0}
  @p
    See @lnk("merged PRs", "https://github.com/scalameta/scalafmt/milestone/17?closed=1").

  @ul
    @li
      IntelliJ plugin now supports a custom path for .scalafmt.conf, by
      @user{vovapolu}. See Tools > Scalafmt > Relative path to scalafmt config.
    @li
      IntelliJ plugin now also tries to read .scalafmt.conf from the projects
      VCS root, by @user{stuhood}.
    @li
      New option @sect.ref{spaces.afterKeywordBeforeParen}, by @user{nrinaudo}.
    @li
      New option @sect.ref{newlines.alwaysBeforeElseAfterCurlyIf},
      by @user{nrinaudo}.
    @li
      sbt-scalafmt now supports sbt 1.0!
    @li
      scalafmt-cli now fails fast on invalid .scalafmt.conf when invoked with
      no cli args, @issue(1012). Thanks @user{xeno-by} for reporting.
    @li
      Off-by-two error for def and class definitions fixed, thanks @user{densh} for
      reporting. Expect diffs when upgrading, see @pr(1016).
    @li
      Our CI now checks for binary compatibility issues on every PR.
      Binary compatibility between 1.x releases is guaranteed for all modules
      except those inside the packages
      @code{org.scalafmt.internal} and
      @code{org.scalafmt.config}.

@sect{1.1.0}
  @ul
    @li
      An off-by-one error in @code{maxColumn} has now been fixed, @issue(976).
      Expect significant diffs from upgrading to this version.
      To get the previous behavior, set @code{maxColumn=n-1} if you previously
      enabled @code{maxColumn=n}.
    @li
      Scalafmt now uses a lenient 'dialect' by default.
      This means that it's no longer necessary to configure
      @code{runner.dialect} to format files using new Scala syntax such as
      trailing commas, @code{inline} keyword, literal types, trait parameters.
    @li
      scalafmt-cli reports errors to stdout by default unless --stdin or --stdout
      are specified. This help fix issues on Windows.
@sect{1.0.0}
  This release was identical to @sect.ref{1.0.0-RC4}.
@sect{1.0.0-RC4}
  @ul
    @li
      Include the commit for the regression fix that was supposed to be
      included in RC3, see @issue(973).
@sect{1.0.0-RC3}
  If no major issues are reported within one week of this release, then it
  will be promoted to v1.0.
  @ul
    @li
      Fix regression in RC2 @issue(973).
    @li
      Arrows in @code{case} pattern matching are now vertically aligned.
      Concretely,
      @config{align.tokens = [caseArrow]} by default now, it was @config{align.tokens = []} before.
      This decision was voted upon on in @issue(890) with 23 votes in favor and
      9 votes against.
    @li
      The cli now enables @code{-i} by default, to get the old behavior
      pass in the flag @code{--stdout}, by @user{pjrt}.
    @li
      The cli @code{--files} flag is now optional, this means @code{scalafmt Foo.scala}
      will write the formatted output into that file, by @user{pjrt}.
    @li
      @config{optIn.annotationNewlines = true} by default now, it was @code{false}.
      See @issue(942) for motivation.
    @li
      @config{spaces.beforeContextBoundColon = IfMultipleBounds} is now supported,
      see @issue(916), by @user{hejfelix}.
    @li
      @config{newlines.alwaysBeforeTopLevelStatements = true} now skips nested blocks,
      see @issue(933), by @user{Daxten}.
    @li
      Fixed off-by-one error with line wrapping around assignments, see @issue(600),
      by @user{aeons}.
    @li
      @code{bestEffortInDeeplyNestedCode} has been removed. This option was unsafe
      and a maintenance burden. See @sect.ref{Deeply nested code} for possible workarounds.
    @li
      Fixed issues with file not found errors when running the cli
      outside the git root directory, @issue(960) and @issue(927).

  PS. If you are using sbt-scalafmt, please give @sect.ref{neo-sbt-scalafmt}
  a try!
@sect{1.0.0-RC2}
  See @sect.ref{1.0.0-RC3}
@sect{1.0.0-RC1}
  See @sect.ref{1.0.0-RC3}

