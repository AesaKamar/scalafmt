80 columns                                                                     |
<<< js.native def is special #108
  def uniform4fv(location: WebGLUniformLocation, v: Float32Array): Unit = js.native
>>>
def uniform4fv(location: WebGLUniformLocation,
    v: Float32Array): Unit = js.native
<<< js.native val is special #108
  val uniform4fv________________________________________________X: Unit = js.native
>>>
val uniform4fv________________________________________________X: Unit = js.native
<<< newline before closing parens #162
{
def tee(): js.Array[_ <: ReadableStream[T]] = js.native  //TODO js.Tuple2[ReadableStream[T
}
>>>
{
  def tee(): js.Array[_ <: ReadableStream[T]] = js.native //TODO js.Tuple2[ReadableStream[T
}
<<< newline before closing parens #162 with arg
{
def tee(arg: IntAAAAAAAAAAA): js.Array[_ <: ReadableStreamBBBBBBBBBBBBBBBBBBBBB[T]] = js.native  //TODO js.Tuple2[ReadableStream[T
}
>>>
{
  def tee(
      arg: IntAAAAAAAAAAA): js.Array[_ <: ReadableStreamBBBBBBBBBBBBBBBBBBBBB[T]] = js.native //TODO js.Tuple2[ReadableStream[T
}
<<< breaking precedence #164
   def getUserMedia(constraints: MediaStreamConstraints,
      success: js.Function1[MediaStream, Any],
      error: js.Function1[DOMError, Any] ): Unit = js.native
>>>
def getUserMedia(constraints: MediaStreamConstraints,
    success: js.Function1[MediaStream, Any],
    error: js.Function1[DOMError, Any]): Unit = js.native
