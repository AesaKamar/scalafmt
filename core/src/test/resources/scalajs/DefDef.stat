80 columns                                                                     |
<<< js.native def is special #108
  def uniform4fv(location: WebGLUniformLocation, v: Float32Array): Unit = js.native
>>>
def uniform4fv(location: WebGLUniformLocation,
    v: Float32Array): Unit = js.native
<<< js.native val is special #108
  val uniform4fv________________________________________________X: Unit = js.native
>>>
val uniform4fv________________________________________________X: Unit = js.native
<<< newline before closing parens #162
{
def tee(): js.Array[_ <: ReadableStream[T]] = js.native  //TODO js.Tuple2[ReadableStream[T
}
>>>
{
  def tee(): js.Array[_ <: ReadableStream[T]] = js.native //TODO js.Tuple2[ReadableStream[T
}
<<< newline before closing parens #162 with arg
{
def tee(arg: IntAAAAAAAAAAA): js.Array[_ <: ReadableStreamBBBBBBBBBBBBBBBBBBBBB[T]] = js.native  //TODO js.Tuple2[ReadableStream[T
}
>>>
{
  def tee(
      arg: IntAAAAAAAAAAA): js.Array[_ <: ReadableStreamBBBBBBBBBBBBBBBBBBBBB[T]] = js.native //TODO js.Tuple2[ReadableStream[T
}
<<< breaking precedence #164
   def getUserMedia(constraints: MediaStreamConstraints,
      success: js.Function1[MediaStream, Any],
      error: js.Function1[DOMError, Any] ): Unit = js.native
>>>
def getUserMedia(constraints: MediaStreamConstraints,
    success: js.Function1[MediaStream, Any],
    error: js.Function1[DOMError, Any]): Unit = js.native
<<< don't move body if it was on new line, #182
def a =
 js.native
>>>
def a = js.native
<<< default penalty #247
{
  def fetch(info: RequestInfo, init: RequestInit = null): js.Promise[Response] = js.native
}
>>>
{
  def fetch(info: RequestInfo,
      init: RequestInit = null): js.Promise[Response] = js.native
}
<<< default penalty 2 #247
  def apply(_status: Int = 200,
      _statusText: ByteString = "OK",
      _headers: HeadersInit = js.Dictionary[String]()): ResponseInit = new ResponseInit {
  ???
}
>>>
def apply(_status: Int = 200, _statusText: ByteString = "OK",
    _headers: HeadersInit = js.Dictionary[String]()): ResponseInit =
  new ResponseInit {
    ???
  }
<<< default penalty 3 #247
{
  def getRegistration(scope: String = ""): js.Promise[js.UndefOr[ServiceWorkerRegistration]] = 2
}
>>>
{
  def getRegistration(
      scope: String = ""): js.Promise[js.UndefOr[ServiceWorkerRegistration]] =
    2
}
<<< default penalty 4 #247
class RTCPeerConnection(
    configuration: js.UndefOr[RTCConfiguration] = js.undefined) extends EventTarget {
  ???
}
>>>
class RTCPeerConnection(
    configuration: js.UndefOr[RTCConfiguration] = js.undefined)
    extends EventTarget {
  ???
}
<<< column limit is holy
 {
   @inline def insertAll(n: Int,
               elems: scala.collection.Traversable[A]): Unit = {
       array.splice(n, 0, elems.toSeq: _*)

               }

 }
>>>
{
  @inline
  def insertAll(n: Int, elems: scala.collection.Traversable[A]): Unit = {
    array.splice(n, 0, elems.toSeq: _*)
  }
}
<<< config style #249
  @inline def apply(
  body: js.UndefOr[String] = js.undefined,
      dir: js.UndefOr[String] = js.undefined,
      icon: js.UndefOr[String] = js.undefined,
      lang: js.UndefOr[String] = js.undefined,
      noscreen: js.UndefOr[Boolean] = js.undefined,
      renotify: js.UndefOr[Boolean] = js.undefined,
      silent: js.UndefOr[Boolean] = js.undefined,
      sound: js.UndefOr[String] = js.undefined,
      sticky: js.UndefOr[Boolean] = js.undefined,
      tag: js.UndefOr[String] = js.undefined,
      onclick: js.UndefOr[js.Function0[Any]] = js.undefined,
      onerror: js.UndefOr[js.Function0[Any]] = js.undefined,
      vibrate: js.UndefOr[js.Array[Double]] =
        js.undefined
        ): NotificationOptions = {
        ???
        }
>>>
@inline
def apply(
    body: js.UndefOr[String] = js.undefined,
    dir: js.UndefOr[String] = js.undefined,
    icon: js.UndefOr[String] = js.undefined,
    lang: js.UndefOr[String] = js.undefined,
    noscreen: js.UndefOr[Boolean] = js.undefined,
    renotify: js.UndefOr[Boolean] = js.undefined,
    silent: js.UndefOr[Boolean] = js.undefined,
    sound: js.UndefOr[String] = js.undefined,
    sticky: js.UndefOr[Boolean] = js.undefined,
    tag: js.UndefOr[String] = js.undefined,
    onclick: js.UndefOr[js.Function0[Any]] = js.undefined,
    onerror: js.UndefOr[js.Function0[Any]] = js.undefined,
    vibrate: js.UndefOr[js.Array[Double]] = js.undefined
): NotificationOptions = {
  ???
}
