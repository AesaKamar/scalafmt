40 columns                              |
<<< newline for each clause
for { f0 <- Option(a)
  filename <- f0
} yield filename
>>>
for {
  f0 <- Option(a)
  filename <- f0
} yield filename
<<< unit
for (
(msg, parseErrors) <- xs) {
  println(header(msg))
}
>>>
for ((msg, parseErrors) <- xs) {
  println(header(msg))
}
<<< SKIP crazy one-liner
val sizes = for (
row <- table) yield ( for (
cell <- row) yield if (cell == null) 0
else cell.toString.length)
>>>
val sizes =
  for (row <- table) yield (
    for (cell <- row) yield
        if (cell == null) 0
        else cell.toString.length)
<<< SKIP if
val k = for {
    _ <- Future(Speed.submitStats(stats)) if !onlyOne
  _ <- Future(Speed.writeComparisonReport(stats, "master"))
} yield ()
>>>
val k = for {
  _ <- Future(Speed.submitStats(stats)) if !onlyOne
  _ <- Future(Speed.writeComparisonReport(stats, "master"))
} yield ()
