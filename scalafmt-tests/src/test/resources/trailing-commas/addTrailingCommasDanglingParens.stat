maxColumn = 30
danglingParentheses = true
align = none
trailingCommas = always

<<< should add a trailing comma on the last argument
def method(
    a: String,
    b: String
)
>>>
def method(
    a: String,
    b: String,
)

<<< should add a trailing comma when breaking into multiple lines
def method(a: String, b: String)
>>>
def method(
    a: String,
    b: String,
)

<<< should not add a trailing comma when not breaking into multiple lines
def m(a: Int, b: Int)
>>>
def m(a: Int, b: Int)

<<< add trailing commas in type parameters lists
def method[
    ParameterA,
    ParameterB
](
    a: String,
    b: String
)
>>>
def method[
    ParameterA,
    ParameterB,
](
    a: String,
    b: String,
)

<<< add trailing commas in type parameters lists when breaking over multiple lines
def method[ParameterA, ParameterB](a: String, b: String, c: String)
>>>
def method[
    ParameterA,
    ParameterB,
](
    a: String,
    b: String,
    c: String,
)

<<< add trailing commas in bin-packed imports
import somepackage.someobject.{
  memberA,
  memberB
}
>>>
import somepackage.someobject.{
  memberA,
  memberB,
}

<<< add trailing commas in bin-packed imports when breaking over multiple lines
import somepackage.someobject.{memberA, memberB}
>>>
import somepackage.someobject.{
  memberA,
  memberB,
}

<<< SKIP should remove a trailing comma when joining into a single line
(a,
b,
)
>>>
(a, b)
